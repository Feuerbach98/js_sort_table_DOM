{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableHead","tHead","firstElementChild","cells","tableRows","tBodies","rows","sortTable","header","compareFunction","indexOfColumn","indexOf","sort","a","b","querySelectorAll","innerText","forEach","row","append","addEventListener","event","includes","target","sortString","selectedRow","replace"],"mappings":";AAAA,aAiCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/BD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAgBH,EAAAA,EAAMI,MAAMC,kBAAkBC,OAC9CC,EAAgBP,EAAAA,EAAMQ,QAAQ,GAAGC,MAoBvC,SAASC,EAAUC,EAAQC,GACnBC,IAAAA,EAAgBV,EAAUW,QAAQH,GAExCJ,EAAUQ,KAAK,SAACC,EAAGC,GACVL,OAAAA,EACLI,EAAEE,iBAAiB,MAAML,GAAeM,UACxCF,EAAEC,iBAAiB,MAAML,GAAeM,aAEzCC,QAAQ,SAAAC,GAAOrB,OAAAA,EAAMQ,QAAQ,GAAGc,OAAOD,KA1B5CrB,EAAMuB,iBAAiB,QAAS,SAACC,GAC3BrB,GAAAA,EAAUsB,SAASD,EAAME,QAAS,CAC9BC,IAQAC,EAAcJ,EAAME,OAAOP,UAEzBS,OACJlB,EAAUc,EAAME,OADI,QAAhBE,GAAyC,WAAhBA,EANd,SAACZ,EAAGC,GACd,OAAED,EAAEa,QAAQ,UAAW,KAASZ,EAAEY,QAAQ,UAAW,KAL3C,SAACb,EAAGC,GACdA,OAAAA,EAAID,EAAI,GAAK","file":"main.e54d64f4.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = [...table.tHead.firstElementChild.cells];\nconst tableRows = [...table.tBodies[0].rows];\n\ntable.addEventListener('click', (event) => {\n  if (tableHead.includes(event.target)) {\n    const sortString = (a, b) => {\n      return b < a ? 1 : -1;\n    };\n\n    const sortNumber = (a, b) => {\n      return +(a.replace(/[^+\\d]/g, '')) - +(b.replace(/[^+\\d]/g, ''));\n    };\n\n    const selectedRow = event.target.innerText;\n\n    return (selectedRow === 'Age' || selectedRow === 'Salary')\n      ? sortTable(event.target, sortNumber)\n      : sortTable(event.target, sortString);\n  }\n});\n\nfunction sortTable(header, compareFunction) {\n  const indexOfColumn = tableHead.indexOf(header);\n\n  tableRows.sort((a, b) => {\n    return compareFunction(\n      a.querySelectorAll('td')[indexOfColumn].innerText,\n      b.querySelectorAll('td')[indexOfColumn].innerText\n    );\n  }).forEach(row => table.tBodies[0].append(row));\n}\n"]}